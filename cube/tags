!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ARRAY_SIZE	context.c	7;"	d	file:
ARRAY_SIZE	main.c	13;"	d	file:
CFLAGS	Makefile	/^CFLAGS=-O0 -ggdb -I. -I\/usr\/include\/drm$/;"	m
COMPILER	Makefile	/^COMPILER=gcc$/;"	m
CONTEXT_H	context.h	2;"	d
CompileShader	main.c	/^GLuint CompileShader (GLuint shaderType, const char *shaderSrc){$/;"	f	signature:(GLuint shaderType, const char *shaderSrc)
DRM_PageFlip	context.c	/^int DRM_PageFlip(void){$/;"	f	signature:(void)
LDFLAGS	Makefile	/^LDFLAGS=-lGLESv2 -lEGL -lm -ldrm -lgbm$/;"	m
SOURCES	Makefile	/^SOURCES=*.c$/;"	m
TARGET	Makefile	/^TARGET=triangle$/;"	m
__anon1::config	context.h	/^	EGLConfig config;$/;"	m	struct:__anon1	access:public
__anon1::context	context.h	/^	EGLContext context;$/;"	m	struct:__anon1	access:public
__anon1::display	context.h	/^	EGLDisplay display;$/;"	m	struct:__anon1	access:public
__anon1::height	context.h	/^	int width, height, refresh;$/;"	m	struct:__anon1	access:public
__anon1::refresh	context.h	/^	int width, height, refresh;$/;"	m	struct:__anon1	access:public
__anon1::surface	context.h	/^	EGLSurface surface;$/;"	m	struct:__anon1	access:public
__anon1::width	context.h	/^	int width, height, refresh;$/;"	m	struct:__anon1	access:public
__anon2::dev	context.h	/^	struct gbm_device *dev;$/;"	m	struct:__anon2	typeref:struct:__anon2::gbm_device	access:public
__anon2::surface	context.h	/^	struct gbm_surface *surface;$/;"	m	struct:__anon2	typeref:struct:__anon2::gbm_surface	access:public
__anon3::connector_id	context.h	/^	uint32_t connector_id;$/;"	m	struct:__anon3	access:public
__anon3::crtc_id	context.h	/^	uint32_t crtc_id;$/;"	m	struct:__anon3	access:public
__anon3::fd	context.h	/^	int fd;$/;"	m	struct:__anon3	access:public
__anon3::mode	context.h	/^	drmModeModeInfo *mode;$/;"	m	struct:__anon3	access:public
__anon4::m	lbeTransform.h	/^	float m[4][4];$/;"	m	struct:__anon4	access:public
bo	context.h	/^	struct gbm_bo *bo;$/;"	m	struct:drm_fb	typeref:struct:drm_fb::gbm_bo	access:public
bo	context.h	/^struct gbm_bo *bo;$/;"	v	typeref:struct:gbm_bo
buf	context.c	/^char buf[80];$/;"	v
buflen	context.c	/^size_t buflen = 20;$/;"	v
config	context.h	/^	EGLConfig config;$/;"	m	struct:__anon1	access:public
connector_id	context.h	/^	uint32_t connector_id;$/;"	m	struct:__anon3	access:public
context	context.h	/^	EGLContext context;$/;"	m	struct:__anon1	access:public
crtc_id	context.h	/^	uint32_t crtc_id;$/;"	m	struct:__anon3	access:public
dev	context.h	/^	struct gbm_device *dev;$/;"	m	struct:__anon2	typeref:struct:__anon2::gbm_device	access:public
display	context.h	/^	EGLDisplay display;$/;"	m	struct:__anon1	access:public
draw	main.c	/^static void draw(uint32_t i)$/;"	f	file:	signature:(uint32_t i)
drm	context.h	/^} drm;$/;"	v	typeref:struct:__anon3
drm_fb	context.h	/^struct drm_fb {$/;"	s
drm_fb::bo	context.h	/^	struct gbm_bo *bo;$/;"	m	struct:drm_fb	typeref:struct:drm_fb::gbm_bo	access:public
drm_fb::fb_id	context.h	/^	uint32_t fb_id;$/;"	m	struct:drm_fb	access:public
drm_fb_destroy_callback	context.c	/^void drm_fb_destroy_callback(struct gbm_bo *bo, void *data)$/;"	f	signature:(struct gbm_bo *bo, void *data)
drm_fb_get_from_bo	context.c	/^struct drm_fb * drm_fb_get_from_bo(struct gbm_bo *bo)$/;"	f	signature:(struct gbm_bo *bo)
eglInfo	context.h	/^} eglInfo;$/;"	v	typeref:struct:__anon1
evctx	context.c	/^drmEventContext evctx = {$/;"	v
evctx	context.h	/^drmEventContext evctx;$/;"	v
exit_condition	teclado.c	/^int exit_condition;$/;"	v
fb	context.h	/^struct drm_fb *fb;$/;"	v	typeref:struct:drm_fb
fb_id	context.h	/^	uint32_t fb_id;$/;"	m	struct:drm_fb	access:public
fd	context.h	/^	int fd;$/;"	m	struct:__anon3	access:public
fds	context.h	/^fd_set fds;$/;"	v
fragmentShaderSrc	main.c	/^GLbyte fragmentShaderSrc[] = $/;"	v
gbm	context.h	/^} gbm;$/;"	v	typeref:struct:__anon2
height	context.h	/^	int width, height, refresh;$/;"	m	struct:__anon1	access:public
init_drm	context.c	/^int init_drm(void)$/;"	f	signature:(void)
init_drm	context.h	/^int init_drm(void);$/;"	p	signature:(void)
init_egl	context.c	/^int init_egl(void) {$/;"	f	signature:(void)
init_gbm	context.c	/^int init_gbm(void)$/;"	f	signature:(void)
init_gbm	context.h	/^int init_gbm(void);$/;"	p	signature:(void)
init_gl	main.c	/^static int init_gl(void)$/;"	f	file:	signature:(void)
iter1	main.c	/^int iter1, iter2;$/;"	v
iter2	main.c	/^int iter1, iter2;$/;"	v
keystate	main.c	/^unsigned* keystate;$/;"	v
lbeCheckGLError	lbeTransform.c	/^void lbeCheckGLError (){$/;"	f
lbeLoadIdentity	lbeTransform.c	/^void lbeLoadIdentity (lbeMatrix *resultado){$/;"	f	signature:(lbeMatrix *resultado)
lbeLoadIdentity	lbeTransform.h	/^void lbeLoadIdentity (lbeMatrix *resultado);$/;"	p	signature:(lbeMatrix *resultado)
lbeMatrix	lbeTransform.h	/^} lbeMatrix;$/;"	t	typeref:struct:__anon4
lbeMatrixMultiply	lbeTransform.c	/^void lbeMatrixMultiply (lbeMatrix *resultado, lbeMatrix *matrix_a, lbeMatrix *matrix_b){$/;"	f	signature:(lbeMatrix *resultado, lbeMatrix *matrix_a, lbeMatrix *matrix_b)
lbeMatrixMultiply	lbeTransform.h	/^void lbeMatrixMultiply (lbeMatrix *resultado, lbeMatrix *matrix_a, lbeMatrix *matrix_b);$/;"	p	signature:(lbeMatrix *resultado, lbeMatrix *matrix_a, lbeMatrix *matrix_b)
lbePrintMatrix	lbeTransform.c	/^void lbePrintMatrix(lbeMatrix *mat) {$/;"	f	signature:(lbeMatrix *mat)
lbePrintMatrix	lbeTransform.h	/^void lbePrintMatrix(lbeMatrix *mat);$/;"	p	signature:(lbeMatrix *mat)
lbeProjection	lbeTransform.c	/^lbeProjection() {$/;"	f
lbeRotate	lbeTransform.c	/^void lbeRotate (lbeMatrix *resultado, int axis_x, int axis_y, int axis_z, float rad){$/;"	f	signature:(lbeMatrix *resultado, int axis_x, int axis_y, int axis_z, float rad)
leftAccel	main.c	/^float leftAccel, rightAccel;$/;"	v
m	lbeTransform.h	/^	float m[4][4];$/;"	m	struct:__anon4	access:public
main	main.c	/^int main(int argc, char *argv[])$/;"	f	signature:(int argc, char *argv[])
mode	context.h	/^	drmModeModeInfo *mode;$/;"	m	struct:__anon3	access:public
newTerm	teclado.c	/^static struct termios oldTerm, newTerm;$/;"	v	typeref:struct:	file:
oldKbmd	teclado.c	/^static long oldKbmd;$/;"	v	file:
oldTerm	teclado.c	/^static struct termios oldTerm, newTerm;$/;"	v	typeref:struct:termios	file:
page_flip_handler	context.h	/^static void page_flip_handler(int fd, unsigned int frame,$/;"	f	signature:(int fd, unsigned int frame, unsigned int sec, unsigned int usec, void *data)
programObject	main.c	/^GLuint programObject;$/;"	v
rAngle	teclado.c	/^float rAngle, rSpeed, rSign;$/;"	v
rSign	teclado.c	/^float rAngle, rSpeed, rSign;$/;"	v
rSpeed	teclado.c	/^float rAngle, rSpeed, rSign;$/;"	v
readKeyboard	teclado.c	/^void readKeyboard()$/;"	f
readKeyboard	teclado.h	/^void readKeyboard();$/;"	p	signature:()
refresh	context.h	/^	int width, height, refresh;$/;"	m	struct:__anon1	access:public
restoreKeyboard	teclado.c	/^void restoreKeyboard()$/;"	f
restoreKeyboard	teclado.h	/^void restoreKeyboard();$/;"	p	signature:()
rightAccel	main.c	/^float leftAccel, rightAccel;$/;"	v
setupKeyboard	teclado.c	/^int setupKeyboard()$/;"	f
setupKeyboard	teclado.h	/^int setupKeyboard();$/;"	p	signature:()
setupShaders	main.c	/^int setupShaders (){$/;"	f
surface	context.h	/^	EGLSurface surface;$/;"	m	struct:__anon1	access:public
surface	context.h	/^	struct gbm_surface *surface;$/;"	m	struct:__anon2	typeref:struct:__anon2::gbm_surface	access:public
vertexShaderSrc	main.c	/^GLbyte vertexShaderSrc[] = $/;"	v
vertices	main.c	/^float vertices[] = {0.0f, 0.5f, 0.0f,$/;"	v
width	context.h	/^	int width, height, refresh;$/;"	m	struct:__anon1	access:public
